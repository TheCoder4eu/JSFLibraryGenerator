/*
 * generated by XItext
 */
package de.beyondjava.xtext.jsf.generator

import de.beyondjava.xtext.jsf.componentLanguage.Attribute
import de.beyondjava.xtext.jsf.componentLanguage.Component
import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IFileSystemAccess
import org.eclipse.xtext.generator.IGenerator

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class AttributesDocumentationGenerator implements IGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess fsa) {
		for (e : resource.allContents.toIterable.filter(Component)) {
			fsa.generateFile("net/bootsfaces/component/" + e.name.toFirstLower + "/" + e.name.toFirstUpper +
				"Attributes.xhtml", e.compile)
		}
	}

	def compile(Component widget) '''
<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html>
<ui:fragment
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:b="http://bootsfaces.net/ui"
	xmlns:ui="http://java.sun.com/jsf/facelets">

		<b:panel look="info">
			<f:facet name="heading">
				<b>Attributes of &lt;b:«widget.name.toFirstLower» &gt;</b>
			</f:facet>
			<table class="table table-striped table-hover"
				style="background-color: #fff">
				<thead>
					<tr>
						<th>Attribute</th>
						<th>Default value</th>
						<th>Description</th>
					</tr>
				</thead>
				<tbody>
					«FOR f : widget.attributes»
					  «f.generateAttribute»
					«ENDFOR»
				</tbody>
			</table>
		</b:panel>
</ui:fragment>
	'''

	def generateAttribute(Attribute a) '''
		<tr>
		    <td>«a.name»</td>
		    <td>«IF a.defaultValue!=null» «a.defaultValue» «ELSEIF a.type=="Boolean"»false«ELSEIF a.type=="Integer"»0 «ELSE»(none)«ENDIF»</td>
		    <td>«IF a.desc != null»«a.desc.replace("\\\"", "\"")»«ENDIF»</td>
		</tr>
	'''
	
}